apiVersion: v1
kind: Service
metadata:
  labels:
    app: codedeploy
  name: codedeploy
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
      name: http
  selector:
    app: codedeploy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: codedeploy
  name: codedeploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codedeploy
  strategy: {}
  template:
    metadata:
      labels:
        app: codedeploy
    spec:
      restartPolicy: Always
      serviceAccountName: codedeploy
      containers:
        - image: ghcr.io/thecodeisalreadydeployed/senior-project-backend:latest
          name: backend
          ports:
            - containerPort: 3000
              name: http
          resources: {}
          env:
            - name: DATABASE_HOST
              value: postgres.default.svc.cluster.local
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USERNAME
              value: postgres
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: codedeploy-secret
                  key: database-password
            - name: DATABASE_NAME
              value: codedeploy
            - name: APP_ENV
              value: PROD
            - name: GITSERVER_HOST
              value: git://gitserver.default.svc.cluster.local:9418
            - name: USERSPACE_REPOSITORY
              value: /etc/gitserver/userspace
            - name: FIREBASE_SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: codedeploy-secret
                  key: firebase-service-account-key
          volumeMounts:
            - mountPath: /etc/gitserver
              name: codedeploy-pv
      volumes:
        - name: codedeploy-pv
          persistentVolumeClaim:
            claimName: codedeploy
status: {}
